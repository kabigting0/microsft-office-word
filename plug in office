<?xml version="1.0" encoding="UTF-8"?>
<OfficeApp xmlns="http://schemas.microsoft.com/office/appforoffice/1.1" 
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
           xmlns:bt="http://schemas.microsoft.com/office/officeappbasictypes/1.0" 
           xmlns:ov="http://schemas.microsoft.com/office/taskpaneappversionoverrides" 
           xsi:type="TaskPaneApp">

  <Id>YOUR_ADDIN_ID</Id>
  <Version>1.0.0.0</Version>
  <ProviderName>Your Company Name</ProviderName>
  <DefaultLocale>en-US</DefaultLocale>
  
  <DisplayName DefaultValue="Excel Add-in"/>
  <Description DefaultValue="Inserts current date and time into selected cell."/>
  
  <Requirements>
    <Sets DefaultMinVersion="1.1">
      <Set Name="OfficeApi" MinVersion="1.1"/>
    </Sets>
  </Requirements>
  
  <Hosts>
    <Host Name="Workbook"/>
  </Hosts>
  
  <DefaultSettings>
    <SourceLocation DefaultValue="https://YOUR_ADDIN_URL/index.html"/>
  </DefaultSettings>
  
  <Permissions>ReadWriteDocument</Permissions>
  
  <VersionOverrides xmlns="http://schemas.microsoft.com/office/taskpaneappversionoverrides" 
                   xsi:type="VersionOverridesV1_0">
    <Hosts>
      <Host xsi:type="Workbook">
        <AllFormFactors>
          <ExtensionPoint xsi:type="PrimaryCommandSurface">
            <OfficeTab id="TabHome">
              <Group id="MyGroup">
                <Label resid="MyGroup.Label"/>
                <Icon>
                  <bt:Image size="16" resid="icon_16x16"/>
                  <bt:Image size="32" resid="icon_32x32"/>
                  <bt:Image size="80" resid="icon_80x80"/>
                </Icon>
                <Control xsi:type="Button" id="ButtonCommand">
                  <Label resid="Button.Label"/>
                  <Supertip>
                    <Title resid="Button.Label"/>
                    <Description resid="Button.Tooltip"/>
                  </Supertip>
                  <Icon>
                    <bt:Image size="16" resid="icon_16x16"/>
                    <bt:Image size="32" resid="icon_32x32"/>
                    <bt:Image size="80" resid="icon_80x80"/>
                  </Icon>
                  <Action xsi:type="ShowTaskpane">
                    <TaskpaneId>MyTaskPaneId</TaskpaneId>
                    <SourceLocation resid="Taskpane.Url"/>
                  </Action>
                </Control>
              </Group>
            </OfficeTab>
          </ExtensionPoint>
        </AllFormFactors>
      </Host>
    </Hosts>
    <Resources>
      <bt:Images>
        <bt:Image id="icon_16x16" DefaultValue="https://YOUR_ADDIN_URL/assets/icon_16x16.png"/>
        <bt:Image id="icon_32x32" DefaultValue="https://YOUR_ADDIN_URL/assets/icon_32x32.png"/>
        <bt:Image id="icon_80x80" DefaultValue="https://YOUR_ADDIN_URL/assets/icon_80x80.png"/>
      </bt:Images>
      <bt:Urls>
        <bt:Url id="Taskpane.Url" DefaultValue="https://YOUR_ADDIN_URL/taskpane.html"/>
      </bt:Urls>
      <bt:ShortStrings>
        <bt:String id="MyGroup.Label" DefaultValue="My Group"/>
        <bt:String id="Button.Label" DefaultValue="Insert Date"/>
      </bt:ShortStrings>
      <bt:LongStrings>
        <bt:String id="Button.Tooltip" DefaultValue="Inserts current date and time into selected cell."/>
      </bt:LongStrings>
    </Resources>
  </VersionOverrides>
</OfficeApp>


<!DOCTYPE html>
<html>
<head>
  <title>Excel Add-in Taskpane</title>
  <script type="text/javascript" src="https://appsforoffice.microsoft.com/lib/1/hosted/office.js"></script>
  <script type="text/javascript" src="taskpane.js"></script>
</head>
<body>
  <p>Welcome to the Excel Add-in!</p>
</body>
</html>


Office.onReady(function (info) {
  if (info.host === Office.HostType.Excel) {
    // Assign event handler to the button click event
    document.getElementById("insertDateButton").onclick = insertDate;
    // Office is ready
    console.log("Office is ready");
  }
});

// Function to insert current date and time into selected cell
async function insertDate() {
  await Excel.run(async (context) => {
    const sheet = context.workbook.worksheets.getActiveWorksheet();
    const selectedRange = context.workbook.getSelectedRange();
    selectedRange.values = [[new Date()]];
    selectedRange.load("values");
    await context.sync();
  });
}
